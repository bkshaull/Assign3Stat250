library(gbm)
y=load("/Users/brittneyshaull/Documents/UCDavis/Stat250/Assign3/digitsTrain.rda")
train=sampleTrain
ytest=load("/Users/brittneyshaull/Documents/UCDavis/Stat250/Assign3/digitsTest.rda")
test=newTest

###Want to get rid of all of the pixels that don't have any variation
i=1
while (i<=ncol(train)) {
	if (sum(train[ , i])==0) {
		train[ ,i]=NULL
		i=i-1
		}
		i=i+1
}
test=subset(test, select=names(train))

############

ytrain=train[ ,1]
xtrain=train[ ,2:ncol(train)]
ytest=test[ ,1]
xtest=test[ ,2:ncol(test)]
ytrain=as.factor(ytrain)
ytest=as.factor(ytest)
test[ ,1]=as.factor(test[ ,1])
train[ ,1]=as.factor(train[ ,1])


fx=as.formula(paste("label~ ", paste(names(train), collapse="+")))
boost=gbm(fx, data=train)

test=subset(test, select=names(train))
z=predict(boost, test, n.trees=100, type="response")
predict=matrix(0,nrow(z),1)
i=1
while (i<=nrow(z)){
predict[i,1]=which.max(z[i, ,1])
i=i+1
}
actual=as.integer(test$label)
error=predict-actual
errorp=which(error==0)
errorpercent=(nrow(z)-length(errorp))/nrow(z)
